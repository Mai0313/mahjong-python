name: Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - release/*

jobs:
  run_tests:
    runs-on: ${{ matrix.os }}
    # container: catthehacker/ubuntu:act-20.04  # Uncomment it if you use it on Gitea

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.9"

    timeout-minutes: 20

    steps:
      - name: Disable SSL Verify
        run: git config --global http.sslVerify false

      - name: Checkout
        uses: actions/checkout@v4.1.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.1.0
        with:
          python-version: ${{ matrix.python-version }}
          token: ${{ secrets.GITHUB_TOKEN }}

      # Disable cache since Github action cache storge is too small for Pytorch.
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python${{ matrix.python-version }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python${{ matrix.python-version }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: List dependencies
        run: |
          python -m pip list

      # echo "::set-output name=has_tests::true"
      # echo "::set-output name=has_tests::false"
      - name: Check for tests
        id: check_tests
        run: |
          if [ -f tests/test_*.py ] || [ -d tests ]; then
              echo "Tests exist, proceeding to run them."
              echo "has_tests=true" >> $GITHUB_OUTPUT
          else
              echo "No tests to run."
              echo "has_tests=false" >> $GITHUB_OUTPUT
          fi

      - name: Run pytest
        if: steps.check_tests.outputs.has_tests == 'true'
        run: |
          pytest -v
